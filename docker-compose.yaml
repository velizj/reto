version: '3.8'

services:
  mysql:
    image: "mysql:latest"
    container_name: mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: hello_meli
    ports:
      - "3306:3306"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  app:
    image: demo-app:latest
    build:
      context: .
      dockerfile: Dockerfile
    #container_name: "demo-app"
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - redis_primary
      - redis_secondary
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/mysql
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: hello_meli
      SPRING_REDIS1_HOST: redis_primary
      SPRING_REDIS1_PORT: 6379
      SPRING_REDIS2_HOST: redis_secondary
      SPRING_REDIS2_PORT: 6379

  redis_primary:
    image: "redis:latest"
    #container_name: "redis_primary"
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redis_primary_data:/data

  redis_secondary:
    image: "redis:latest"
    #container_name: "redis_secondary"
    ports:
      - "6380:6379"
    networks:
      - app-network
    volumes:
      - redis_secondary_data:/data

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis_primary_data:
  redis_secondary_data: